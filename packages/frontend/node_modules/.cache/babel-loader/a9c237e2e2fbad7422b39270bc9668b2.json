{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/components/PublicDashboard/DashboardTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Grid, Typography } from '@mui/material';\nimport { columns } from './TableData';\nimport moment from 'moment';\nimport PanelHeader from '../../Shared/common/PanelHeader';\nimport { getDashboardData, publicComplain } from \"../../Shared/Api/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardTable(_ref) {\n  _s();\n\n  let {\n    auth\n  } = _ref;\n  const [rows, setRows] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  let history = useHistory();\n  useEffect(() => {\n    publicComplain(page, rowsPerPage).then(res => {\n      setRows(res);\n    });\n  }, [setRowsPerPage, setRows, auth.user, rowsPerPage, page]);\n\n  const redirectToSingleComplain = id => {\n    console.log(id);\n    history.push(`complain-department-details/${id}`);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function toDateTime(secs) {\n    var t = new Date(Date.UTC(1970, 0, 1)); // Epoch\n\n    t.setUTCSeconds(secs);\n    return moment(t).format('MMMM Do YYYY, h:mm:ss a');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      title: auth.user.UserRole === \"Complainant\" ? \"My Complaints\" : \"All Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  top: 57,\n                  minWidth: column.minWidth\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    fontWeight: \"bolder\"\n                  },\n                  children: column.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows && rows.length && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: columns.map(column => {\n                  let columnValue = row.hasOwnProperty(column.id);\n                  const value = column.id === \"CreatedAt\" ? toDateTime(row[column.id]._seconds) : row[column.id];\n                  const id = row.id;\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    onClick: () => redirectToSingleComplain(row.id),\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, row.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [3, 10, 25, 100, rows.length],\n        component: \"div\",\n        count: rows && rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardTable, \"rRLR3iAz+GT1HXB0mNdhr9UHgZs=\", false, function () {\n  return [useHistory];\n});\n\n_c = DashboardTable;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(DashboardTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/components/PublicDashboard/DashboardTable.jsx"],"names":["React","useState","useEffect","connect","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Grid","Typography","columns","moment","PanelHeader","getDashboardData","publicComplain","useHistory","DashboardTable","auth","rows","setRows","anchorEl","setAnchorEl","page","setPage","rowsPerPage","setRowsPerPage","history","then","res","user","redirectToSingleComplain","id","console","log","push","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","toDateTime","secs","t","Date","UTC","setUTCSeconds","format","UserRole","width","maxHeight","map","column","align","top","minWidth","fontWeight","label","length","slice","row","cursor","columnValue","hasOwnProperty","_seconds","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Grid, Typography } from '@mui/material';\nimport { columns } from './TableData';\nimport moment from 'moment'\nimport PanelHeader from '../../Shared/common/PanelHeader';\nimport { getDashboardData, publicComplain } from \"../../Shared/Api/api\"\nimport { useHistory } from \"react-router-dom\"\n\n\nfunction DashboardTable({ auth }) {\n    const [rows, setRows] = React.useState([]);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    let history = useHistory()\n\n    useEffect(() => {\n\n        publicComplain(page, rowsPerPage).then((res) => {\n            setRows(res);\n        })\n\n    }, [setRowsPerPage, setRows, auth.user, rowsPerPage, page]);\n\n    const redirectToSingleComplain = (id) => {\n        console.log(id)\n\n        history.push(`complain-department-details/${id}`)\n    }\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    function toDateTime(secs) {\n        var t = new Date(Date.UTC(1970, 0, 1)); // Epoch\n        t.setUTCSeconds(secs);\n        return moment(t).format('MMMM Do YYYY, h:mm:ss a')\n    }\n    return (\n        <Grid container >\n            <PanelHeader title={auth.user.UserRole === \"Complainant\" ? \"My Complaints\" : \"All Complaints\"} />\n            <Paper sx={{ width: '100%' }}>\n                <TableContainer sx={{ maxHeight: 440 }}>\n                    <Table aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ top: 57, minWidth: column.minWidth }}\n                                    >\n                                        <Typography style={{ fontWeight: \"bolder\" }}>{column.label}</Typography>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows && rows.length && rows\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id} style={{ cursor: \"pointer\" }}>\n                                            {columns.map((column) => {\n                                                let columnValue = row.hasOwnProperty(column.id)\n                                                const value = column.id === \"CreatedAt\" ? toDateTime(row[column.id]._seconds) : row[column.id]\n                                                const id = row.id\n                                                return (\n                                                    <TableCell key={column.id} align={column.align} onClick={() => redirectToSingleComplain(row.id)}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <input type=\"number\" name=\"rowss\"></input> */}\n\n                <TablePagination\n                    rowsPerPageOptions={[3, 10, 25, 100, rows.length]}\n                    component=\"div\"\n                    count={rows && rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </Grid>\n    );\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\nexport default connect(mapStateToProps)(DashboardTable);\n"]},"metadata":{},"sourceType":"module"}