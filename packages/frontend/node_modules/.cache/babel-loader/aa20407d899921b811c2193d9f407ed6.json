{"ast":null,"code":"import { REGISTER_SUCCESS, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR, LOGOUT, CLEAR_PROFILE, LOADING } from \"./types\";\nimport { toast } from \"react-toastify\";\nimport { auth, storage } from \"../../firebase\";\nimport axios from \"axios\";\nconst client = axios.create({\n  baseURL: \"https://e-complainbox.herokuapp.com\",\n  json: true\n});\n\nconst register = (_ref, history) => {\n  let {\n    fullname,\n    email,\n    password,\n    mobile\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: LOADING,\n        payload: true\n      });\n      const registrationInfo = await auth.createUserWithEmailAndPassword(email, password);\n      const generateToken = await auth.currentUser.getIdToken(true);\n      console.log(registrationInfo);\n      console.log(generateToken);\n      let data = {\n        fullname: fullname,\n        email: email,\n        password: password,\n        mobile: mobile,\n        token: generateToken\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/registration\",\n        headers: {\n          AuthToken: generateToken\n        },\n        data: data\n      });\n      console.log(response.data.message);\n      localStorage.setItem(\"token\", generateToken);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: response.data.message\n      });\n      dispatch({\n        type: LOADING,\n        payload: false\n      });\n      history.push(\"/email-verification\");\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      dispatch({\n        type: LOADING,\n        payload: false\n      });\n    }\n  };\n};\n\nconst login = (_ref2, history) => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-type\": \"Application/json\"\n      }\n    };\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n    const newUser = {\n      email,\n      password\n    };\n    const phoneRegex = /^(\\+91-|\\+91|0)?\\d{10}$/; // Change this regex based on requirement\n\n    let isValidPhone = phoneRegex.test(email); //\n\n    let idToken = \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjhmYmRmMjQxZTdjM2E2NTEzNTYwNmRkYzFmZWQyYzU1MjI2MzBhODciLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZmlyc3QtcHJvamVjdC0yOWRkMSIsImF1ZCI6ImZpcnN0LXByb2plY3QtMjlkZDEiLCJhdXRoX3RpbWUiOjE2MzQ5MjQzMDUsInVzZXJfaWQiOiJScXJhMGd0aEk0UmlnY3lxRVZHZEowYnd0VkYzIiwic3ViIjoiUnFyYTBndGhJNFJpZ2N5cUVWR2RKMGJ3dFZGMyIsImlhdCI6MTYzNDkyNTE0MCwiZXhwIjoxNjM0OTI4NzQwLCJlbWFpbCI6InJhbWFuYXNhbmthcnZAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbInJhbWFuYXNhbmthcnZAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.bvChf2MvgobFjw5SL0dSpNGcFyVhFQcEQLU83m1axsk_k_bgpoI8dCA8I_PvCujihltXWXeNpnRJXxUffsk_51o8o06y9GVzrduL1-nOvuNNFFvv7XEJK1RFol746EU2Pk6tJVnSL2ZOxFqAQONxw6kpHNj3xdcskK1s3iv7kHroBbs15F0M_y_19_yGS0cVzkO31HCRUhbF43cwyiw6gQV3XAlwhQjPfcYOzDZQq5jwSy08_OFgLLcdqp9UT4t4bq-zthUkWa6WFCo57vqZLYjVEdQsipl4FFhkcYfWW8sJlHxBzby83ZRf10uktJg3mZRi0hnJZmSy3y10Qz0SJw\";\n\n    if (isValidPhone) {\n      let data = {\n        mobile: email\n      };\n      const res = await client({\n        method: \"post\",\n        url: \"/getemailbymobile\",\n        headers: {\n          AuthToken: idToken\n        },\n        data: data\n      });\n      email = res.data.userEmail;\n    }\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      const generateToken = await auth.currentUser.getIdToken(true);\n      localStorage.setItem(\"token\", generateToken);\n      let data = {\n        email: email\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/userdata\",\n        headers: {\n          AuthToken: generateToken\n        },\n        data: data\n      });\n      console.log(response.data.user[0]);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data.user[0]\n      });\n      dispatch({\n        type: LOADING,\n        payload: false\n      });\n\n      if (localStorage.getItem(\"userIsEmailVerified\") == \"No\") {\n        history.push(\"/email-verification\");\n      } else if (localStorage.getItem(\"userIsMobileVerified\") == \"No\") {\n        history.push(\"/mobile-verification\");\n      } else {\n        history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      dispatch({\n        type: LOADING,\n        payload: false\n      });\n    }\n  };\n};\n\nconst emailverifications = _ref3 => {\n  let {\n    OTP\n  } = _ref3;\n  return async dispatch => {\n    try {\n      let data = {\n        email: localStorage.getItem(\"userEmail\"),\n        docId: localStorage.getItem(\"userID\"),\n        otp: OTP\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/emailverification\",\n        headers: {\n          AuthToken: localStorage.getItem(\"token\")\n        },\n        data: data\n      });\n\n      if (response.data.message == \"success\") {\n        localStorage.setItem(\"userIsEmailVerified\", \"Yes\");\n        window.location.href = \"/mobile-verification\";\n      } else {\n        toast.error(\"Invalid OTP\");\n      }\n\n      console.log(response);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n};\n\nconst mobileverifications = _ref4 => {\n  let {\n    OTP\n  } = _ref4;\n  return async dispatch => {\n    try {\n      let data = {\n        email: localStorage.getItem(\"userEmail\"),\n        docId: localStorage.getItem(\"userID\"),\n        otp: OTP\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/mobileverification\",\n        headers: {\n          AuthToken: localStorage.getItem(\"token\")\n        },\n        data: data\n      }).then(function (response) {\n        console.log(response.data.message);\n\n        if (response.data.message == \"success\") {\n          localStorage.setItem(\"userIsMobileVerified\", \"Yes\");\n          window.location.href = \"/raise\";\n        } else {\n          toast.error(\"Invalid OTP\");\n        }\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n};\n\nconst loadUser = () => async dispatch => {\n  try {\n    let data = {\n      email: localStorage.getItem(\"userEmail\")\n    };\n    const response = await client({\n      method: \"post\",\n      url: \"/userdata\",\n      headers: {\n        AuthToken: localStorage.getItem(\"token\")\n      },\n      data: data\n    });\n    console.log(response);\n    console.log(response.data.user[0]);\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data.user[0]\n    });\n  } catch (error) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userEmail\");\n    localStorage.removeItem(\"userID\");\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\nconst logout = history => async dispatch => {\n  await auth.signOut();\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n  history.push(\"/login\");\n};\n\nexport { register, loadUser, login, logout, emailverifications, mobileverifications };","map":{"version":3,"sources":["/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/redux/actions/auth.js"],"names":["REGISTER_SUCCESS","LOGIN_SUCCESS","USER_LOADED","AUTH_ERROR","LOGOUT","CLEAR_PROFILE","LOADING","toast","auth","storage","axios","client","create","baseURL","json","register","history","fullname","email","password","mobile","dispatch","type","payload","registrationInfo","createUserWithEmailAndPassword","generateToken","currentUser","getIdToken","console","log","data","token","response","method","url","headers","AuthToken","message","localStorage","setItem","push","error","login","config","newUser","phoneRegex","isValidPhone","test","idToken","res","userEmail","signInWithEmailAndPassword","user","getItem","emailverifications","OTP","docId","otp","window","location","href","mobileverifications","then","loadUser","removeItem","logout","signOut"],"mappings":"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","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  CLEAR_PROFILE,\n  LOADING,\n} from \"./types\";\nimport { toast } from \"react-toastify\";\nimport { auth, storage } from \"../../firebase\";\nimport axios from \"axios\";\nconst client = axios.create({\n  baseURL: \"https://e-complainbox.herokuapp.com\",\n  json: true,\n});\n\nconst register =\n  ({ fullname, email, password, mobile }, history) =>\n  async (dispatch) => {\n    try {\n      dispatch({\n        type: LOADING,\n        payload: true,\n      });\n      const registrationInfo = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      const generateToken = await auth.currentUser.getIdToken(true);\n      console.log(registrationInfo);\n      console.log(generateToken);\n      let data = {\n        fullname: fullname,\n        email: email,\n        password: password,\n        mobile: mobile,\n        token: generateToken,\n      };\n\n      const response = await client({\n        method: \"post\",\n        url: \"/registration\",\n        headers: {\n          AuthToken: generateToken,\n        },\n        data: data,\n      });\n      console.log(response.data.message);\n      localStorage.setItem(\"token\", generateToken);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: response.data.message,\n      });\n      dispatch({\n        type: LOADING,\n        payload: false,\n      });\n      history.push(\"/email-verification\");\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      dispatch({\n        type: LOADING,\n        payload: false,\n      });\n    }\n  };\nconst login =\n  ({ email, password }, history) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n      },\n    };\n    dispatch({\n      type: LOADING,\n      payload: true,\n    });\n    const newUser = {\n      email,\n      password,\n    };\n    const phoneRegex = /^(\\+91-|\\+91|0)?\\d{10}$/; // Change this regex based on requirement\n\n    let isValidPhone = phoneRegex.test(email); //\n\n    let idToken =\n      \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjhmYmRmMjQxZTdjM2E2NTEzNTYwNmRkYzFmZWQyYzU1MjI2MzBhODciLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZmlyc3QtcHJvamVjdC0yOWRkMSIsImF1ZCI6ImZpcnN0LXByb2plY3QtMjlkZDEiLCJhdXRoX3RpbWUiOjE2MzQ5MjQzMDUsInVzZXJfaWQiOiJScXJhMGd0aEk0UmlnY3lxRVZHZEowYnd0VkYzIiwic3ViIjoiUnFyYTBndGhJNFJpZ2N5cUVWR2RKMGJ3dFZGMyIsImlhdCI6MTYzNDkyNTE0MCwiZXhwIjoxNjM0OTI4NzQwLCJlbWFpbCI6InJhbWFuYXNhbmthcnZAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbInJhbWFuYXNhbmthcnZAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.bvChf2MvgobFjw5SL0dSpNGcFyVhFQcEQLU83m1axsk_k_bgpoI8dCA8I_PvCujihltXWXeNpnRJXxUffsk_51o8o06y9GVzrduL1-nOvuNNFFvv7XEJK1RFol746EU2Pk6tJVnSL2ZOxFqAQONxw6kpHNj3xdcskK1s3iv7kHroBbs15F0M_y_19_yGS0cVzkO31HCRUhbF43cwyiw6gQV3XAlwhQjPfcYOzDZQq5jwSy08_OFgLLcdqp9UT4t4bq-zthUkWa6WFCo57vqZLYjVEdQsipl4FFhkcYfWW8sJlHxBzby83ZRf10uktJg3mZRi0hnJZmSy3y10Qz0SJw\";\n\n    if (isValidPhone) {\n      let data = {\n        mobile: email,\n      };\n      const res = await client({\n        method: \"post\",\n        url: \"/getemailbymobile\",\n        headers: {\n          AuthToken: idToken,\n        },\n        data: data,\n      });\n\n      email = res.data.userEmail;\n    }\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      const generateToken = await auth.currentUser.getIdToken(true);\n      localStorage.setItem(\"token\", generateToken);\n      let data = {\n        email: email,\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/userdata\",\n        headers: {\n          AuthToken: generateToken,\n        },\n        data: data,\n      });\n      console.log(response.data.user[0]);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data.user[0],\n      });\n      dispatch({\n        type: LOADING,\n        payload: false,\n      });\n      if (localStorage.getItem(\"userIsEmailVerified\") == \"No\") {\n        history.push(\"/email-verification\");\n      } else if (localStorage.getItem(\"userIsMobileVerified\") == \"No\") {\n        history.push(\"/mobile-verification\");\n      } else {\n        history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      dispatch({\n        type: LOADING,\n        payload: false,\n      });\n    }\n  };\n\nconst emailverifications =\n  ({ OTP }) =>\n  async (dispatch) => {\n    try {\n      let data = {\n        email: localStorage.getItem(\"userEmail\"),\n        docId: localStorage.getItem(\"userID\"),\n        otp: OTP,\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/emailverification\",\n        headers: {\n          AuthToken: localStorage.getItem(\"token\"),\n        },\n        data: data,\n      });\n      if (response.data.message == \"success\") {\n        localStorage.setItem(\"userIsEmailVerified\", \"Yes\");\n        window.location.href = \"/mobile-verification\";\n      } else {\n        toast.error(\"Invalid OTP\");\n      }\n      console.log(response);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\nconst mobileverifications =\n  ({ OTP }) =>\n  async (dispatch) => {\n    try {\n      let data = {\n        email: localStorage.getItem(\"userEmail\"),\n        docId: localStorage.getItem(\"userID\"),\n        otp: OTP,\n      };\n      const response = await client({\n        method: \"post\",\n        url: \"/mobileverification\",\n        headers: {\n          AuthToken: localStorage.getItem(\"token\"),\n        },\n        data: data,\n      }).then(function (response) {\n        console.log(response.data.message);\n        if (response.data.message == \"success\") {\n          localStorage.setItem(\"userIsMobileVerified\", \"Yes\");\n          window.location.href = \"/raise\";\n        } else {\n          toast.error(\"Invalid OTP\");\n        }\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\nconst loadUser = () => async (dispatch) => {\n  try {\n    let data = {\n      email: localStorage.getItem(\"userEmail\"),\n    };\n    const response = await client({\n      method: \"post\",\n      url: \"/userdata\",\n      headers: {\n        AuthToken: localStorage.getItem(\"token\"),\n      },\n      data: data,\n    });\n    console.log(response);\n    console.log(response.data.user[0]);\n    dispatch({\n      type: USER_LOADED,\n      payload: response.data.user[0],\n    });\n  } catch (error) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userEmail\");\n    localStorage.removeItem(\"userID\");\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\nconst logout = (history) => async (dispatch) => {\n  await auth.signOut();\n  dispatch({\n    type: CLEAR_PROFILE,\n  });\n  dispatch({\n    type: LOGOUT,\n  });\n  history.push(\"/login\");\n};\n\nexport {\n  register,\n  loadUser,\n  login,\n  logout,\n  emailverifications,\n  mobileverifications,\n};\n"]},"metadata":{},"sourceType":"module"}