{"ast":null,"code":"import { REGISTER_FAILED, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAILED, USER_LOADED, AUTH_ERROR, LOGOUT, LOADING } from \"../actions/types\";\nconst INITIAL_STATE = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: false,\n  user: null,\n  IsEmailVerified: null,\n  IsMobleVerified: null\n};\n\nconst registration = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n        IsEmailVerified: action.payload.IsEmailVerified,\n        IsMobleVerified: action.payload.IsMobileVerified\n      };\n\n    case AUTH_ERROR:\n      localStorage.getItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"userID\", action.payload.id);\n      localStorage.setItem(\"userEmail\", action.payload.Email);\n      localStorage.setItem(\"userFullName\", action.payload.FullName);\n      localStorage.setItem(\"userIsEmailVerified\", action.payload.IsEmailVerified);\n      localStorage.setItem(\"userIsMobileVerified\", action.payload.IsMobileVerified);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n        IsEmailVerified: action.payload.IsEmailVerified,\n        IsMobleVerified: action.payload.IsMobileVerified\n      };\n\n    case LOADING:\n      return { ...state,\n        ...action.payload,\n        loading: action.payload\n      };\n\n    case REGISTER_FAILED:\n    case LOGIN_FAILED:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userEmail\");\n      localStorage.removeItem(\"userID\");\n      localStorage.removeItem(\"userFullName\");\n      localStorage.removeItem(\"userIsEmailVerified\");\n      localStorage.removeItem(\"userIsMobileVerified\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default registration;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/redux/reducers/authReducer.js"],"names":["REGISTER_FAILED","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_FAILED","USER_LOADED","AUTH_ERROR","LOGOUT","LOADING","INITIAL_STATE","token","localStorage","getItem","isAuthenticated","loading","user","IsEmailVerified","IsMobleVerified","registration","state","action","type","payload","IsMobileVerified","setItem","id","Email","FullName","removeItem"],"mappings":"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","sourcesContent":["import {\n  REGISTER_FAILED,\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  LOADING,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: false,\n  user: null,\n  IsEmailVerified: null,\n  IsMobleVerified: null,\n};\n\nconst registration = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n        IsEmailVerified: action.payload.IsEmailVerified,\n        IsMobleVerified: action.payload.IsMobileVerified,\n      };\n    case AUTH_ERROR:\n      localStorage.getItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"userID\", action.payload.id);\n      localStorage.setItem(\"userEmail\", action.payload.Email);\n      localStorage.setItem(\"userFullName\", action.payload.FullName);\n      localStorage.setItem(\n        \"userIsEmailVerified\",\n        action.payload.IsEmailVerified\n      );\n      localStorage.setItem(\n        \"userIsMobileVerified\",\n        action.payload.IsMobileVerified\n      );\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n        IsEmailVerified: action.payload.IsEmailVerified,\n        IsMobleVerified: action.payload.IsMobileVerified,\n      };\n    case LOADING:\n      return {\n        ...state,\n        ...action.payload,\n        loading: action.payload,\n      };\n    case REGISTER_FAILED:\n    case LOGIN_FAILED:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userEmail\");\n      localStorage.removeItem(\"userID\");\n      localStorage.removeItem(\"userFullName\");\n      localStorage.removeItem(\"userIsEmailVerified\");\n      localStorage.removeItem(\"userIsMobileVerified\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\nexport default registration;\n"]},"metadata":{},"sourceType":"module"}