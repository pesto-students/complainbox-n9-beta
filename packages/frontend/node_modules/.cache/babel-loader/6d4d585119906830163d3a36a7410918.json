{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/components/Mobileverification/MobileVerifications.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Grid, Button, Alert } from \"@mui/material\";\nimport TextField from '@mui/material/TextField';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport PanelHeader from '../../Shared/common/PanelHeader';\nimport { connect } from \"react-redux\";\nimport { mobileverifications } from \"../../redux/actions/auth\";\nimport OTPImages from \"../../assets/otp.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  OTP: yup.string('Enter your OTP').required('OTP is required')\n});\n\nfunction MobileVerifications(_ref) {\n  _s();\n\n  let {\n    mobileverifications\n  } = _ref;\n  const [error, setError] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      OTP: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async allValues => {\n      await new Promise(r => setTimeout(mobileverifications(allValues)));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    bgcolor: \"#fff\",\n    borderRadius: \"5px\",\n    boxShadow: 3,\n    xs: 12,\n    sm: 8,\n    my: 12,\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      title: \"Mobile Verification \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        alignItems: \"stretch\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          sx: {\n            display: {\n              xs: 'none',\n              sm: 'none',\n              md: 'block'\n            }\n          },\n          alignItems: \"stretch\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: OTPImages,\n            width: \"100%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          px: 2,\n          container: true,\n          spacing: 0,\n          direction: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            item: true,\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              item: true,\n              noValidate: true,\n              sx: {\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formik.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  color: \"primary\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  id: \"OTP\",\n                  label: \"Enter OTP sent on your Mobile\",\n                  name: \"OTP\",\n                  value: formik.values.OTP,\n                  onChange: formik.handleChange,\n                  error: formik.touched.OTP && Boolean(formik.errors.OTP),\n                  helperText: formik.touched.OTP && formik.errors.OTP,\n                  autoComplete: \"OTP\",\n                  autoFocus: true,\n                  variant: \"standard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    color: \"#fff\"\n                  },\n                  type: \"submit\",\n                  fullWidth: true,\n                  variant: \"contained\",\n                  sx: {\n                    mt: 3,\n                    mb: 2\n                  },\n                  children: \"Send OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MobileVerifications, \"ui7cwNdkn91Y/tlX/y1Wnan5+bg=\", false, function () {\n  return [useFormik];\n});\n\n_c = MobileVerifications;\nexport default connect(null, {\n  mobileverifications\n})(MobileVerifications);\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileVerifications\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/e-complain-box/packages/frontend/src/components/Mobileverification/MobileVerifications.jsx"],"names":["React","useState","Box","Grid","Button","Alert","TextField","useFormik","yup","PanelHeader","connect","mobileverifications","OTPImages","validationSchema","object","OTP","string","required","MobileVerifications","error","setError","formik","initialValues","onSubmit","allValues","Promise","r","setTimeout","display","xs","sm","md","flexDirection","alignItems","mt","handleSubmit","values","handleChange","touched","Boolean","errors","color","mb"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Box, Grid, Button, Alert } from \"@mui/material\";\nimport TextField from '@mui/material/TextField';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport PanelHeader from '../../Shared/common/PanelHeader'\nimport { connect } from \"react-redux\";\nimport { mobileverifications } from \"../../redux/actions/auth\";\nimport OTPImages from \"../../assets/otp.jpg\"\nconst validationSchema = yup.object({\n    OTP: yup\n        .string('Enter your OTP')\n        .required('OTP is required')\n});\nfunction MobileVerifications({ mobileverifications }) {\n    const [error, setError] = useState(\"\")\n    const formik = useFormik({\n        initialValues: {\n            OTP: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: async (allValues) => {\n            await new Promise((r) => setTimeout(mobileverifications(allValues)));\n        },\n    });\n    return (\n        <Grid item bgcolor=\"#fff\" borderRadius=\"5px\" boxShadow={3} xs={12} sm={8} my={12}>\n            <PanelHeader title={\"Mobile Verification \"} />\n            <Box>\n                <Grid item container alignItems=\"stretch\">\n                    <Grid item md={6} sx={{ display: { xs: 'none', sm: 'none', md: 'block' } }} alignItems=\"stretch\">\n                        <img src={OTPImages} width=\"100%\" height=\"100%\" />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={6} px={2} container\n                        spacing={0}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Box\n                            item\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                            }}\n                        >\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Box item noValidate sx={{ mt: 1 }}>\n                                <form onSubmit={formik.handleSubmit}>\n                                    <TextField\n                                        color=\"primary\"\n                                        margin=\"normal\"\n                                        fullWidth\n                                        id=\"OTP\"\n                                        label=\"Enter OTP sent on your Mobile\"\n                                        name=\"OTP\"\n                                        value={formik.values.OTP}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.OTP && Boolean(formik.errors.OTP)}\n                                        helperText={formik.touched.OTP && formik.errors.OTP}\n                                        autoComplete=\"OTP\"\n                                        autoFocus\n                                        variant=\"standard\"\n                                    />\n                                    <Button style={{ color: \"#fff\" }}\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        sx={{ mt: 3, mb: 2 }}\n                                    >\n                                        Send OTP\n                                    </Button>\n                                </form>\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Grid>\n    );\n}\n\nexport default connect(null, { mobileverifications })(MobileVerifications);"]},"metadata":{},"sourceType":"module"}